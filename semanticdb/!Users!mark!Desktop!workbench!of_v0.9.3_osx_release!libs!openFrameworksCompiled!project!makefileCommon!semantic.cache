;; Object makefileCommon/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "makefileCommon/"
  :tables
  (list
    (semanticdb-table "config.project.mk"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( ("OF_SHARED_MAKEFILES_PATH" variable (:default-value ("$(OF_ROOT)/libs/openFrameworksCompiled/project/makefileCommon")) nil [310 397])
            ("ALL_OF_CORE_LIBS_PLATFORM_LIB_PATHS" variable (:default-value ("$(OF_LIBS_PATH)/*/lib/$(ABI_LIB_SUBPATH)")) nil [753 832])
            ("ALL_OF_CORE_LIBS_PATHS" variable (:default-value ("$(shell $(FIND) $(ALL_OF_CORE_LIBS_PLATFORM_LIB_PATHS) -type d -not -path \"*/openFrameworksCompiled/*\" 2> /dev/null | grep -v \"/\\.[^\\.]\" )")) nil [944 1108])
            ("ALL_OF_CORE_LIBSORDER_MAKE_FILES" variable (:default-value ("$(shell $(FIND) $(ALL_OF_CORE_LIBS_PLATFORM_LIB_PATHS) -name libsorder.make -not -path \"*/openFrameworksCompiled/*\" 2> /dev/null | grep -v \"/\\.[^\\.]\" )")) nil [1242 1429])
            ("OF_CORE_LIBS_THAT_NEED_ORDER" variable (:default-value ("$(subst /lib/$(ABI_LIB_SUBPATH)/libsorder.make,,$(ALL_OF_CORE_LIBSORDER_MAKE_FILES))")) nil [1492 1608])
            ("OF_CORE_LIBS_THAT_DONT_NEED_ORDER" variable (:default-value ("$(filter-out $(OF_CORE_LIBS_THAT_NEED_ORDER),$(subst /lib/$(ABI_LIB_SUBPATH),,$(ALL_OF_CORE_LIBS_PATHS)))")) nil [1750 1892])
            ("OF_CORE_LIBS_PLATFORM_LIBS_STATICS" variable (:default-value ("$(shell $(FIND) $(addsuffix /lib/$(ABI_LIB_SUBPATH),$(OF_CORE_LIBS_THAT_DONT_NEED_ORDER)) -name *.a 2> /dev/null | grep -v \"/\\.[^\\.]\" )")) nil [2191 2364])
            ("OF_CORE_LIBS_PLATFORM_LIBS_STATICS" variable (:default-value ("$(foreach v,$(ALL_OF_CORE_LIBSORDER_MAKE_FILES),$(foreach vv,$(shell cat $(v) 2> /dev/null | sed 's/[ ]*\\#.*//g' | sed '/^$$/d'),$(addprefix $(subst libsorder.make,,$(v)),$(vv))))")) nil [3116 3334])
            ("OF_CORE_THIRDPARTY_STATIC_LIBS" variable (:default-value ("$(filter-out $(CORE_EXCLUSIONS),$(OF_CORE_LIBS_PLATFORM_LIBS_STATICS))")) nil [3913 4018])
            ("OF_CORE_THIRDPARTY_STATIC_LIBS" variable (:default-value ("$(PLATFORM_STATIC_LIBRARIES)")) nil [4018 4081])
            ("OF_CORE_THIRDPARTY_SHARED_LIBS" variable (:default-value ("$(filter-out $(CORE_EXCLUSIONS),$(ALL_OF_CORE_THIRDPARTY_SHARED_LIBS))")) nil [4117 4222])
            ("OF_CORE_LIBRARY_LDFLAGS" variable (:default-value ("$(addprefix -L,$(PLATFORM_LIBRARY_SEARCH_PATHS))")) nil [4646 4722])
            ("B_PROCESS_ADDONS" variable nil nil [6150 6169])
            ("OF_CORE_LIBS" variable (:default-value ("$(OF_CORE_THIRDPARTY_STATIC_LIBS)")) nil [9776 9826])
            ("OF_CORE_LIBS" variable (:default-value ("$(PLATFORM_SHARED_LIBRARIES)")) nil [9995 10040])
            ("CORE_PKG_CONFIG_LIBRARIES" variable (:default-value ("$(PROJECT_ADDONS_PKG_CONFIG_LIBRARIES)")) nil [10123 10191])
            ("OF_CORE_LIBS" variable (:default-value ("$(addprefix -l,$(PLATFORM_LIBRARIES))")) nil [10570 10624])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(strip $(PROJECT_EXCLUSIONS))")) nil [11233 11289])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/bin")) nil [11339 11384])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/obj")) nil [11384 11429])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/.git")) nil [11429 11475])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/bin/%")) nil [11475 11522])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/obj/%")) nil [11522 11569])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/.git/%")) nil [11569 11617])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/%.xcodeproj")) nil [11617 11670])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/%.xcodeproj/%")) nil [11670 11725])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/build")) nil [11725 11772])
            ("OF_PROJECT_EXCLUSIONS" variable (:default-value ("$(PROJECT_ROOT)/build/%")) nil [11772 11821])
            ("ALL_OF_PROJECT_SOURCE_PATHS" variable (:default-value ("$(shell $(FIND) $(PROJECT_ROOT) -mindepth 1 \\
                                                           -type d \\
                                                           -not -path \"./bin/*\" \\
                                                           -not -path \"./obj/*\" \\
                                                           -not -path \"./*.xcodeproj/*\" \\
                                                           -not -path \"*/\\.*\")")) nil [12173 12651])
            ("OF_PROJECT_SOURCE_PATHS" variable (:default-value ("$(filter-out $(OF_PROJECT_EXCLUSIONS),$(ALL_OF_PROJECT_SOURCE_PATHS))")) nil [12939 13035])
            ("OF_PROJECT_SOURCE_FILES" variable (:default-value ("$(shell $(FIND) $(OF_PROJECT_SOURCE_PATHS) -maxdepth 1 -name \"*.mm\" -or -name \"*.m\" -or -name \"*.cpp\" -or -name \"*.c\" -or -name \"*.cc\" -or -name \"*.cxx\" -or -name \"*.S\" | grep -v \"/\\.[^\\.]\")")) nil [13396 13613])
            ("OF_PROJECT_INCLUDES_CFLAGS" variable (:default-value ("$(addprefix -I,$(filter-out $(PROJECT_INCLUDE_EXCLUSIONS),$(OF_PROJECT_SOURCE_PATHS)))")) nil [13812 13929])
            ("OF_ADDON_INCLUDES_CFLAGS" variable (:default-value ("$(addprefix -I,$(filter-out $(PROJECT_INCLUDE_EXCLUSIONS),$(PROJECT_ADDONS_INCLUDES)))")) nil [13929 14044])
            ("OF_PROJECT_LIBS" variable nil nil [14583 14602])
            ("OF_PROJECT_LIBS" variable (:default-value ("$(PROJECT_ADDONS_LIBS)")) nil [14602 14644])
            ("OF_PROJECT_DEFINES" variable (:default-value ("$(PROJECT_DEFINES)")) nil [14888 14929])
            ("OF_PROJECT_DEFINES" variable (:default-value ("$(PROJECT_ADDONS_DEFINES)")) nil [14929 14977])
            ("OF_PROJECT_DEFINES_CFLAGS" variable (:default-value ("$(addprefix -D,$(OF_PROJECT_DEFINES))")) nil [14978 15044])
            ("OF_PROJECT_CFLAGS" variable (:default-value ("$(OF_CORE_BASE_CFLAGS)")) nil [15253 15296])
            ("OF_PROJECT_CFLAGS" variable (:default-value ("$(OF_CORE_DEFINES_CFLAGS)")) nil [15296 15343])
            ("OF_PROJECT_CFLAGS" variable (:default-value ("$(PROJECT_CFLAGS)")) nil [15343 15382])
            ("OF_PROJECT_CFLAGS" variable (:default-value ("$(PROJECT_ADDONS_CFLAGS)")) nil [15382 15428])
            ("OF_PROJECT_CFLAGS" variable (:default-value ("$(USER_CFLAGS)")) nil [15428 15473])
            ("OF_PROJECT_CFLAGS" variable (:default-value ("$(OF_PROJECT_DEFINES_CFLAGS)")) nil [15473 15523])
            ("OF_PROJECT_CXXFLAGS" variable (:default-value ("$(OF_CORE_BASE_CXXFLAGS)")) nil [15523 15570])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(PROJECT_LDFLAGS)")) nil [15752 15793])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(OF_CORE_LIBRARY_LDFLAGS)")) nil [15793 15842])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(USER_LDFLAGS)")) nil [15842 15889])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(USER_LIBS)")) nil [15889 15935])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(OF_PROJECT_LIBS_LDFLAGS)")) nil [15935 15984])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(PROJECT_ADDONS_LDFLAGS)")) nil [15984 16032])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(addprefix -framework ,$(PROJECT_FRAMEWORKS))")) nil [16032 16101])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(addprefix -framework ,$(PLATFORM_FRAMEWORKS))")) nil [16101 16171])
            ("OF_PROJECT_LDFLAGS" variable (:default-value ("$(addprefix -framework ,$(PROJECT_ADDONS_FRAMEWORKS))")) nil [16171 16247])
            ("NODEPS" variable (:default-value ("clean")) nil [16670 16685])
            ("ALL_CFLAGS" variable nil nil [16869 16882])
            ("ALL_CFLAGS" variable (:default-value ("$(OF_PROJECT_CFLAGS)")) nil [16923 16958])
            ("ALL_CXXFLAGS" variable nil nil [16970 16985])
            ("ALL_CXXFLAGS" variable (:default-value ("$(OF_PROJECT_CXXFLAGS)")) nil [17026 17065])
            ("CFLAGS" variable (:default-value ("$(strip $(ALL_CFLAGS))")) nil [17113 17145])
            ("CXXFLAGS" variable (:default-value ("$(strip $(ALL_CXXFLAGS))")) nil [17193 17229])
            ("PROJECT_INCLUDE_CFLAGS" variable (:default-value ("$(strip $(OF_CORE_INCLUDES_CFLAGS) $(OF_PROJECT_INCLUDES_CFLAGS) $(OF_ADDON_INCLUDES_CFLAGS))")) nil [17230 17349])
            ("ADDON_INCLUDE_CFLAGS" variable (:default-value ("$(strip $(OF_CORE_INCLUDES_CFLAGS) $(OF_ADDON_INCLUDES_CFLAGS))")) nil [17349 17436])
            ("ALL_LDFLAGS" variable nil nil [17621 17635])
            ("ALL_LDFLAGS" variable (:default-value ("$(PLATFORM_LDFLAGS)")) nil [17686 17721])
            ("ALL_LDFLAGS" variable (:default-value ("$(OF_PROJECT_LDFLAGS)")) nil [17721 17758])
            ("LDFLAGS" variable (:default-value ("$(strip $(ALL_LDFLAGS))")) nil [17807 17841])
            ("PROJECT_OPTIMIZATION_CFLAGS_DEBUG" variable nil nil [17864 17900])
            ("PROJECT_OPTIMIZATION_CFLAGS_DEBUG" variable nil nil [17900 17937])
            ("OF_PROJECT_OBJ_FILES" variable (:default-value ("$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(patsubst %.cxx,%.o,$(patsubst %.cc,%.o,$(patsubst %.S,%.o,$(patsubst %.mm,%.o,$(patsubst %.m,%.o,$(OF_PROJECT_SOURCE_FILES))))))))")) nil [20042 20238])
            ("OBJS_WITH_PREFIX" variable (:default-value ("$(addprefix $(OF_PROJECT_OBJ_OUTPUT_PATH),$(OF_PROJECT_OBJ_FILES))")) nil [20238 20324])
            ("OBJS_WITHOUT_EXTERNAL" variable (:default-value ("$(subst $(strip $(PROJECT_EXTERNAL_SOURCE_PATHS)),,$(OBJS_WITH_PREFIX))")) nil [20324 20420])
            ("OF_PROJECT_OBJS" variable (:default-value ("$(subst $(PROJECT_ROOT)/,,$(OBJS_WITHOUT_EXTERNAL))")) nil [20420 20490])
            ("OF_PROJECT_DEPS" variable (:default-value ("$(patsubst %.o,%.d,$(OF_PROJECT_OBJS))")) nil [20490 20547])
            ("OF_PROJECT_DEPENDENCY_FILES" variable (:default-value ("$(OF_PROJECT_DEPS)" "$(OF_PROJECT_ADDONS_DEPS)")) nil [20549 20624]))          
      :file "config.project.mk"
      :pointmax 20793
      :fsize 20796
      :lastmodtime '(22239 59342 0 0)
      :unmatched-syntax '((semantic-list 20730 . 20786) (punctuation 20729 . 20730) (bol 20725 . 20725) (semantic-list 20684 . 20724) (punctuation 20683 . 20684) (bol 20679 . 20679) (semantic-list 19977 . 20033) (punctuation 19976 . 19977) (bol 19972 . 19972) (semantic-list 19931 . 19971) (punctuation 19930 . 19931) (bol 19926 . 19926) (semantic-list 19846 . 19898) (punctuation 19845 . 19846) (bol 19841 . 19841) (semantic-list 19804 . 19840) (punctuation 19803 . 19804) (bol 19799 . 19799) (shell-command 19188 . 19193) (bol 19187 . 19187) (shell-command 19123 . 19186) (bol 19122 . 19122) (shell-command 19117 . 19121) (bol 19116 . 19116) (shell-command 19048 . 19115) (bol 19047 . 19047) (shell-command 18990 . 19046) (bol 18989 . 18989) (ENDIF 18982 . 18987) (bol 18978 . 18978) (symbol 18957 . 18977) (semantic-list 18939 . 18957) (punctuation 18938 . 18939) (punctuation 18936 . 18937) (punctuation 18935 . 18936) (symbol 18923 . 18934) (bol 18918 . 18918) (ELSE 18913 . 18917) (bol 18909 . 18909) (semantic-list 18875 . 18908) (punctuation 18874 . 18875) (punctuation 18872 . 18873) (punctuation 18871 . 18872) (symbol 18859 . 18870) (bol 18854 . 18854) (symbol 18822 . 18853) (IFDEF 18816 . 18821) (bol 18812 . 18812) (shell-command 18805 . 18810) (bol 18804 . 18804) (shell-command 18742 . 18803) (bol 18741 . 18741) (shell-command 18736 . 18740) (bol 18735 . 18735) (shell-command 18669 . 18734) (bol 18668 . 18668) (shell-command 18612 . 18667) (bol 18611 . 18611) (shell-command 18546 . 18551) (bol 18545 . 18545) (shell-command 18483 . 18544) (bol 18482 . 18482) (shell-command 18477 . 18481) (bol 18476 . 18476) (shell-command 18413 . 18475) (bol 18412 . 18412) (shell-command 18357 . 18411) (bol 18356 . 18356) (ENDIF 18349 . 18354) (bol 18345 . 18345) (symbol 18319 . 18344) (semantic-list 18301 . 18319) (punctuation 18300 . 18301) (punctuation 18298 . 18299) (punctuation 18297 . 18298) (symbol 18285 . 18296) (bol 18280 . 18280) (ELSE 18275 . 18279) (bol 18271 . 18271) (semantic-list 18239 . 18270) (punctuation 18238 . 18239) (punctuation 18236 . 18237) (punctuation 18235 . 18236) (symbol 18223 . 18234) (bol 18218 . 18218) (symbol 18188 . 18217) (IFDEF 18182 . 18187) (bol 18178 . 18178) (shell-command 18171 . 18176) (bol 18170 . 18170) (shell-command 18110 . 18169) (bol 18109 . 18109) (shell-command 18104 . 18108) (bol 18103 . 18103) (shell-command 18042 . 18102) (bol 18041 . 18041) (shell-command 17987 . 18040) (bol 17986 . 17986) (semantic-list 16624 . 16636) (punctuation 16623 . 16624) (punctuation 16621 . 16622) (symbol 16618 . 16620) (bol 16614 . 16614) (semantic-list 16576 . 16589) (punctuation 16575 . 16576) (punctuation 16573 . 16574) (symbol 16570 . 16572) (bol 16566 . 16566) (semantic-list 16527 . 16540) (punctuation 16526 . 16527) (punctuation 16524 . 16525) (symbol 16520 . 16523) (bol 16516 . 16516) (semantic-list 16476 . 16490) (punctuation 16475 . 16476) (punctuation 16473 . 16474) (symbol 16469 . 16472) (bol 16465 . 16465) (semantic-list 16363 . 16438) (punctuation 16362 . 16363) (bol 16358 . 16358) (semantic-list 14116 . 14171) (punctuation 14115 . 14116) (bol 14111 . 14111) (semantic-list 14071 . 14110) (punctuation 14070 . 14071) (bol 14066 . 14066) (semantic-list 13203 . 13253) (punctuation 13202 . 13203) (bol 13198 . 13198) (semantic-list 13163 . 13197) (punctuation 13162 . 13163) (bol 13158 . 13158) (semantic-list 13104 . 13156) (punctuation 13103 . 13104) (bol 13099 . 13099) (semantic-list 13062 . 13098) (punctuation 13061 . 13062) (bol 13057 . 13057) (shell-command 12759 . 12880) (bol 12758 . 12758) (shell-command 12694 . 12757) (bol 12693 . 12693) (shell-command 11030 . 11035) (bol 11029 . 11029) (shell-command 10929 . 11028) (bol 10928 . 10928) (shell-command 10923 . 10927) (bol 10922 . 10922) (shell-command 10745 . 10921) (bol 10744 . 10744) (shell-command 10716 . 10743) (bol 10715 . 10715) (shell-command 10496 . 10501) (bol 10495 . 10495) (shell-command 10408 . 10494) (bol 10407 . 10407) (shell-command 10402 . 10406) (bol 10401 . 10401) (shell-command 10268 . 10400) (bol 10267 . 10267) (shell-command 10239 . 10266) (bol 10238 . 10238) (shell-command 9939 . 9988) (bol 9938 . 9938) (ENDIF 9643 . 9648) (bol 9639 . 9639) (semantic-list 9579 . 9638) (punctuation 9578 . 9579) (punctuation 9576 . 9577) (symbol 9556 . 9575) (bol 9551 . 9551) (symbol 9539 . 9550) (IFDEF 9533 . 9538) (bol 9529 . 9529) (bol 9520 . 9520) (ENDIF 9514 . 9519) (bol 9510 . 9510) (shell-command 9456 . 9509) (bol 9455 . 9455) (semantic-list 9434 . 9454) (IFNEQ 9428 . 9433) (bol 9424 . 9424) (bol 9382 . 9382) (bol 9300 . 9300) (bol 9258 . 9258) (bol 9177 . 9177) (ENDIF 9170 . 9175) (bol 9166 . 9166) (semantic-list 9138 . 9165) (punctuation 9137 . 9138) (bol 9129 . 9129) (semantic-list 9085 . 9128) (punctuation 9084 . 9085) (bol 9076 . 9076) (semantic-list 9048 . 9075) (punctuation 9047 . 9048) (bol 9039 . 9039) (symbol 9024 . 9038) (IFDEF 9018 . 9023) (bol 9014 . 9014) (semantic-list 8946 . 9012) (punctuation 8945 . 8946) (punctuation 8943 . 8944) (symbol 8928 . 8942) (bol 8924 . 8924) (bol 8846 . 8846) (ENDIF 8839 . 8844) (bol 8835 . 8835) (bol 8766 . 8766) (semantic-list 8711 . 8765) (punctuation 8710 . 8711) (bol 8702 . 8702) (semantic-list 8646 . 8701) (punctuation 8645 . 8646) (bol 8637 . 8637) (semantic-list 8608 . 8636) (IFNEQ 8602 . 8607) (bol 8598 . 8598) (bol 8517 . 8517) (shell-command 8516 . 8516) (bol 8515 . 8515) (shell-command 8413 . 8514) (bol 8412 . 8412) (semantic-list 8346 . 8410) (punctuation 8345 . 8346) (punctuation 8343 . 8344) (symbol 8321 . 8342) (bol 8317 . 8317) (bol 8275 . 8275) (semantic-list 8213 . 8273) (punctuation 8212 . 8213) (punctuation 8210 . 8211) (symbol 8189 . 8209) (bol 8185 . 8185) (bol 8106 . 8106) (semantic-list 8078 . 8104) (punctuation 8077 . 8078) (semantic-list 8050 . 8076) (punctuation 8049 . 8050) (punctuation 8047 . 8048) (punctuation 8046 . 8047) (symbol 8021 . 8045) (bol 8017 . 8017) (bol 7934 . 7934) (bol 7850 . 7850) (semantic-list 7796 . 7848) (punctuation 7795 . 7796) (punctuation 7793 . 7794) (punctuation 7792 . 7793) (symbol 7767 . 7791) (bol 7763 . 7763) (bol 7697 . 7697) (semantic-list 7599 . 7695) (punctuation 7598 . 7599) (punctuation 7596 . 7597) (symbol 7578 . 7595) (bol 7574 . 7574) (bol 7542 . 7542) (bol 7465 . 7465) (bol 7387 . 7387) (semantic-list 7317 . 7385) (punctuation 7316 . 7317) (punctuation 7314 . 7315) (punctuation 7313 . 7314) (symbol 7288 . 7312) (bol 7284 . 7284) (bol 7194 . 7194) (bol 7154 . 7154) (semantic-list 7063 . 7152) (punctuation 7062 . 7063) (punctuation 7060 . 7061) (punctuation 7059 . 7060) (symbol 7034 . 7058) (bol 7030 . 7030) (bol 6985 . 6985) (bol 6943 . 6943) (bol 6898 . 6898) (bol 6836 . 6836) (bol 6778 . 6778) (semantic-list 6717 . 6776) (punctuation 6716 . 6717) (punctuation 6714 . 6715) (symbol 6693 . 6713) (bol 6689 . 6689) (bol 6620 . 6620) (bol 6538 . 6538) (bol 6506 . 6506) (bol 6425 . 6425) (symbol 6336 . 6339) (punctuation 6334 . 6335) (symbol 6317 . 6333) (bol 6313 . 6313) (symbol 6223 . 6226) (punctuation 6221 . 6222) (symbol 6204 . 6220) (bol 6200 . 6200) (shell-command 5744 . 5816) (bol 5743 . 5743) (shell-command 5658 . 5737) (bol 5657 . 5657) (semantic-list 5600 . 5638) (punctuation 5599 . 5600) (bol 5595 . 5595) (semantic-list 5479 . 5516) (punctuation 5478 . 5479) (bol 5474 . 5474) (semantic-list 5414 . 5444) (punctuation 5413 . 5414) (bol 5409 . 5409) (semantic-list 5298 . 5346) (punctuation 5297 . 5298) (bol 5293 . 5293) (semantic-list 5142 . 5183) (punctuation 5141 . 5142) (bol 5137 . 5137) (semantic-list 5111 . 5136) (punctuation 5110 . 5111) (bol 5106 . 5106) (semantic-list 5055 . 5104) (punctuation 5054 . 5055) (bol 5050 . 5050) (semantic-list 5016 . 5049) (punctuation 5015 . 5016) (bol 5011 . 5011) (semantic-list 4925 . 5010) (punctuation 4924 . 4925) (bol 4920 . 4920) (shell-command 4522 . 4639) (bol 4521 . 4521) (shell-command 4438 . 4520) (bol 4437 . 4437) (shell-command 3819 . 3824) (bol 3818 . 3818) (shell-command 3639 . 3817) (bol 3638 . 3638) (shell-command 3609 . 3637) (bol 3608 . 3608) (shell-command 3428 . 3602) (bol 3427 . 3427) (semantic-list 247 . 259) (punctuation 246 . 247) (punctuation 244 . 245) (symbol 232 . 244) (bol 228 . 228) (semantic-list 181 . 200) (punctuation 180 . 181) (punctuation 178 . 179) (symbol 171 . 178) (bol 167 . 167)))
    (semanticdb-table "compile.project.mk"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( (".DEFAULT_GOAL" variable (:default-value ("Release")) nil [1 23])
            ("OF_SHARED_MAKEFILES_PATH" variable (:default-value ("$(OF_ROOT)/libs/openFrameworksCompiled/project/makefileCommon")) nil [66 153])
            ("$(OF_SHARED_MAKEFILES_PATH)/config.shared.mk" include nil nil [154 207])
            ("ABIS_TO_COMPILE" variable nil nil [1804 1822])
            (".PHONY" function (:arguments ("all" "Debug" "Release" "after" "clean" "CleanDebug" "CleanRelease" "help" "force")) nil [2759 2832])
            ("Release" function nil nil [2834 3086])
            ("Debug" function nil nil [3349 3588])
            ("ReleaseABI" function (:arguments ("$(TARGET)")) nil [3841 4012])
            ("DebugABI" function (:arguments ("$(TARGET)")) nil [4013 4182])
            ("all" function nil nil [4183 4203])
            ("run" function nil nil [4204 4209])
            ("RunRelease" function nil nil [4302 4314])
            ("RunDebug" function nil nil [4407 4417])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("force")) nil [4510 4889])
            ("$(OF_ADDONS_PATH)" function (:arguments ("force")) nil [4890 5224])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.cpp" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [5285 5604])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.cxx" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [5605 5924])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.cc" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [5925 6243])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.m" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [6244 6561])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.mm" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [6562 6880])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.c" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [6881 7185])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_ROOT)/%.S" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [7186 7501])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.cpp" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [7551 7887])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.cxx" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [7888 8225])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.cc" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [8226 8561])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.m" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [8562 8896])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.mm" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [8897 9232])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.c" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [9233 9554])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(PROJECT_EXTERNAL_SOURCE_PATHS)/%.S" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [9555 9876])
            ("PROJECT_ADDONS_CPPS" variable (:default-value ("$(addsuffix %.cpp,$(PROJECT_ADDON_PATHS))")) nil [9962 10024])
            ("PROJECT_ADDONS_OBJ_PATH" variable (:default-value ("$(realpath .)/$(OF_PROJECT_OBJ_OUTPUT_PATH)addons/")) nil [10024 10099])
            ("$(PROJECT_ADDONS_OBJ_PATH)" function (:arguments ("$(PROJECT_ADDONS_CPPS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [10099 10198])
            ("PROJECT_ADDONS_CXXS" variable (:default-value ("$(addsuffix %.cxx,$(PROJECT_ADDON_PATHS))")) nil [10441 10503])
            ("$(PROJECT_ADDONS_OBJ_PATH)" function (:arguments ("$(PROJECT_ADDONS_CXXS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [10503 10602])
            ("PROJECT_ADDONS_MS" variable (:default-value ("$(addsuffix %.m,$(PROJECT_ADDON_PATHS))")) nil [10846 10904])
            ("$(PROJECT_ADDONS_OBJ_PATH)" function (:arguments ("$(PROJECT_ADDONS_MS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [10904 11001])
            ("PROJECT_ADDONS_MMS" variable (:default-value ("$(addsuffix %.mm,$(PROJECT_ADDON_PATHS))")) nil [11244 11304])
            ("$(PROJECT_ADDONS_OBJ_PATH)" function (:arguments ("$(PROJECT_ADDONS_MMS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [11304 11402])
            ("PROJECT_ADDONS_CCS" variable (:default-value ("$(addsuffix %.cc,$(PROJECT_ADDON_PATHS))")) nil [11645 11705])
            ("$(PROJECT_ADDONS_OBJ_PATH)" function (:arguments ("$(PROJECT_ADDONS_CCS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [11705 11803])
            ("PROJECT_ADDONS_SS" variable (:default-value ("$(addsuffix %.S,$(PROJECT_ADDON_PATHS))")) nil [12033 12091])
            ("$(PROJECT_ADDONS_OBJ_PATH)" function (:arguments ("$(PROJECT_ADDONS_SS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [12091 12188])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.cpp" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [12473 12864])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.cxx" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [12865 13256])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.cc" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [13257 13647])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.m" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [13648 14037])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.mm" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [14038 14428])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.c" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [14429 14805])
            ("$(OF_ADDONS_PATH)" function (:arguments ("$(OF_ADDONS_PATH)/%.S" "$(OF_ADDONS_PATH)/$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [14806 15189])
            ("$(OF_PROJECT_OBJ_OUTPUT_PATH)" function (:arguments ("$(OF_ROOT)/libs/openFrameworks/%.cpp" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [15244 15639])
            ("$(TARGET)" function (:arguments ("$(OF_PROJECT_OBJS)" "$(OF_PROJECT_ADDONS_OBJS)" "$(OF_PROJECT_LIBS)" "$(TARGET_LIBS)" "$(OF_PROJECT_OBJ_OUTPUT_PATH).compiler_flags")) nil [15670 16016])
            ("clean" function nil nil [16018 16069])
            ("$(CLEANTARGET)" function nil nil [16070 16089])
            ("$(CLEANTARGET)" function nil nil [16239 16255])
            ("after" function (:arguments ("$(TARGET_NAME)")) nil [16561 16918])
            ("copyaddonsdata" function nil nil [16919 16997])
            ("help" function nil nil [16998 18119])
            ("AndroidRelease" function nil nil [18137 18190])
            ("AndroidDebug" function nil nil [18191 18240])
            ("CleanAndroid" function nil nil [18241 18290]))          
      :file "compile.project.mk"
      :pointmax 18290
      :fsize 18289
      :lastmodtime '(22239 59342 0 0)
      :unmatched-syntax '((shell-command 18256 . 18289) (bol 18255 . 18255) (shell-command 16543 . 16559) (bol 16542 . 16542) (shell-command 16437 . 16529) (bol 16436 . 16436) (shell-command 16340 . 16430) (bol 16339 . 16339) (shell-command 16279 . 16305) (bol 16278 . 16278) (shell-command 16219 . 16237) (bol 16218 . 16218) (shell-command 16202 . 16217) (bol 16201 . 16201) (shell-command 16164 . 16200) (bol 16163 . 16163) (shell-command 16125 . 16156) (bol 16124 . 16124) (shell-command 12422 . 12422) (bol 12421 . 12421) (shell-command 12420 . 12420) (bol 12419 . 12419) (shell-command 12418 . 12418) (bol 12417 . 12417) (shell-command 12254 . 12410) (bol 12253 . 12253) (shell-command 12237 . 12252) (bol 12236 . 12236) (shell-command 12215 . 12235) (bol 12214 . 12214) (shell-command 11869 . 12025) (bol 11868 . 11868) (shell-command 11852 . 11867) (bol 11851 . 11851) (shell-command 11830 . 11850) (bol 11829 . 11829) (shell-command 11468 . 11637) (bol 11467 . 11467) (shell-command 11451 . 11466) (bol 11450 . 11450) (shell-command 11429 . 11449) (bol 11428 . 11428) (shell-command 11067 . 11236) (bol 11066 . 11066) (shell-command 11050 . 11065) (bol 11049 . 11049) (shell-command 11028 . 11048) (bol 11027 . 11027) (shell-command 10668 . 10838) (bol 10667 . 10667) (shell-command 10651 . 10666) (bol 10650 . 10650) (shell-command 10629 . 10649) (bol 10628 . 10628) (shell-command 10264 . 10433) (bol 10263 . 10263) (shell-command 10247 . 10262) (bol 10246 . 10246) (shell-command 10225 . 10245) (bol 10224 . 10224) (shell-command 4478 . 4502) (bol 4477 . 4477) (shell-command 4450 . 4471) (bol 4449 . 4449) (shell-command 4375 . 4399) (bol 4374 . 4374) (shell-command 4347 . 4368) (bol 4346 . 4346) (shell-command 4270 . 4294) (bol 4269 . 4269) (shell-command 4242 . 4263) (bol 4241 . 4241) (shell-command 3767 . 3833) (bol 3766 . 3766) (shell-command 3642 . 3718) (bol 3641 . 3641) (shell-command 3618 . 3635) (bol 3617 . 3617) (shell-command 3273 . 3339) (bol 3272 . 3272) (shell-command 3144 . 3224) (bol 3143 . 3143) (shell-command 3118 . 3137) (bol 3117 . 3117) (shell-command 2712 . 2751) (bol 2711 . 2711) (shell-command 2657 . 2710) (bol 2656 . 2656) (shell-command 2555 . 2602) (bol 2554 . 2554) (symbol 2393 . 2400) (punctuation 2391 . 2392) (symbol 2379 . 2390) (bol 2375 . 2375) (semantic-list 2365 . 2374) (punctuation 2364 . 2365) (symbol 2360 . 2364) (symbol 2353 . 2359) (semantic-list 2344 . 2353) (punctuation 2343 . 2344) (symbol 2339 . 2343) (punctuation 2337 . 2338) (symbol 2330 . 2336) (bol 2326 . 2326) (shell-command 2284 . 2289) (bol 2283 . 2283) (shell-command 2238 . 2282) (bol 2237 . 2237) (shell-command 2230 . 2236) (bol 2229 . 2229) (shell-command 2221 . 2228) (bol 2220 . 2220) (shell-command 2133 . 2219) (bol 2132 . 2132) (shell-command 2100 . 2131) (bol 2099 . 2099) (shell-command 2046 . 2098) (bol 2045 . 2045) (shell-command 2017 . 2044) (bol 2016 . 2016) (shell-command 1955 . 1960) (bol 1954 . 1954) (shell-command 1907 . 1953) (bol 1906 . 1906) (shell-command 1876 . 1905) (bol 1875 . 1875) (shell-command 1791 . 1796) (bol 1790 . 1790) (shell-command 1741 . 1789) (bol 1740 . 1740) (shell-command 1735 . 1739) (bol 1734 . 1734) (shell-command 1711 . 1733) (bol 1710 . 1710) (shell-command 1669 . 1709) (bol 1668 . 1668) (shell-command 1661 . 1666) (bol 1660 . 1660) (shell-command 1615 . 1659) (bol 1614 . 1614) (shell-command 1609 . 1613) (bol 1608 . 1608) (shell-command 1583 . 1607) (bol 1582 . 1582) (shell-command 1543 . 1581) (bol 1542 . 1542) (shell-command 1535 . 1540) (bol 1534 . 1534) (shell-command 1516 . 1533) (bol 1515 . 1515) (shell-command 1497 . 1514) (bol 1496 . 1496) (shell-command 1473 . 1494) (bol 1472 . 1472) (semantic-list 1453 . 1471) (IFEQ 1448 . 1452) (ELSE 1443 . 1447) (bol 1443 . 1443) (shell-command 1436 . 1441) (bol 1435 . 1435) (shell-command 1386 . 1434) (bol 1385 . 1385) (shell-command 1380 . 1384) (bol 1379 . 1379) (shell-command 1356 . 1378) (bol 1355 . 1355) (shell-command 1314 . 1354) (bol 1313 . 1313) (shell-command 1307 . 1312) (bol 1306 . 1306) (shell-command 1261 . 1305) (bol 1260 . 1260) (shell-command 1255 . 1259) (bol 1254 . 1254) (shell-command 1229 . 1253) (bol 1228 . 1228) (shell-command 1189 . 1227) (bol 1188 . 1188) (shell-command 1166 . 1187) (bol 1165 . 1165) (semantic-list 1143 . 1164) (IFEQ 1138 . 1142) (ELSE 1133 . 1137) (bol 1133 . 1133) (shell-command 1126 . 1131) (bol 1125 . 1125) (shell-command 1076 . 1124) (bol 1075 . 1075) (shell-command 1070 . 1074) (bol 1069 . 1069) (shell-command 1046 . 1068) (bol 1045 . 1045) (shell-command 1004 . 1044) (bol 1003 . 1003) (shell-command 996 . 1001) (bol 995 . 995) (shell-command 950 . 994) (bol 949 . 949) (shell-command 944 . 948) (bol 943 . 943) (shell-command 918 . 942) (bol 917 . 917) (shell-command 878 . 916) (bol 877 . 877) (shell-command 870 . 875) (bol 869 . 869) (shell-command 844 . 868) (bol 843 . 843) (shell-command 825 . 842) (bol 824 . 824) (shell-command 801 . 822) (bol 800 . 800) (semantic-list 752 . 799) (IFEQ 747 . 751) (ELSE 742 . 746) (bol 742 . 742) (shell-command 736 . 741) (bol 735 . 735) (shell-command 688 . 734) (bol 687 . 687) (shell-command 682 . 686) (bol 681 . 681) (shell-command 652 . 680) (bol 651 . 651) (shell-command 612 . 650) (bol 611 . 611) (shell-command 604 . 609) (bol 603 . 603) (shell-command 560 . 602) (bol 559 . 559) (shell-command 554 . 558) (bol 553 . 553) (shell-command 522 . 552) (bol 521 . 521) (shell-command 484 . 520) (bol 483 . 483) (shell-command 476 . 481) (bol 475 . 475) (shell-command 452 . 474) (bol 451 . 451) (shell-command 433 . 450) (bol 432 . 432) (shell-command 413 . 430) (bol 412 . 412) (shell-command 392 . 411) (bol 391 . 391) (semantic-list 298 . 320) (punctuation 297 . 298) (punctuation 295 . 296) (symbol 287 . 294) (bol 283 . 283)))
    (semanticdb-table "config.shared.mk"
      :file "config.shared.mk"
      :fsize 13636
      :lastmodtime '(22239 59342 0 0)))
  :file "!Users!mark!Desktop!workbench!of_v0.9.3_osx_release!libs!openFrameworksCompiled!project!makefileCommon!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
